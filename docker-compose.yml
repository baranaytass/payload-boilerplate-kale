version: '3.8'

services:
  postgres:
    image: postgres:15
    restart: unless-stopped
    environment:
      POSTGRES_DB: kale_payload_db
      POSTGRES_USER: kale_user  
      POSTGRES_PASSWORD: kale_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U kale_user -d kale_payload_db"]
      interval: 5s
      timeout: 5s
      retries: 5

  pgadmin:
    image: dpage/pgadmin4:latest
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@kale.com
      PGLADMIN_DEFAULT_PASSWORD: admin123
    ports:
      - "8080:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      postgres:
        condition: service_healthy

  app:
    build: .
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - DATABASE_URI=postgresql://kale_user:kale_password@postgres:5432/kale_payload_db
      - POSTGRES_URL=postgresql://kale_user:kale_password@postgres:5432/kale_payload_db
      - PAYLOAD_SECRET=your-super-secret-key-for-docker
      - PAYLOAD_PUBLIC_SERVER_URL=http://localhost:3000
      - NEXT_PUBLIC_SERVER_URL=http://localhost:3000
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - .:/app
      - /app/node_modules
      - /app/.next
    command: npm run dev

volumes:
  postgres_data:
  pgadmin_data: